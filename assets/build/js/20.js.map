{"version":3,"sources":["webpack:///./assets/src/js/app/components/CategoryFilter.js","webpack:///./assets/src/js/app/components/DateFilter.js","webpack:///./assets/src/js/app/components/ResultItem.js","webpack:///./assets/src/js/app/components/ResultsList.js","webpack:///./assets/src/js/app/containers/templates/Search.js"],"names":["CategoryFilter","props","filterHandler","bind","state","query","queryString","parse","location","search","event","history","checked","target","queryCats","cat_name","split","name","post_type","push","el","join","stringify","render","categories","catIDs","Object","keys","map","includes","id","slug","title","Component","nb","DateFilter","handleChangeStart","handleChangeEnd","handleFilter","handleClear","after","before","startDate","Date","endDate","date","setState","newQuery","format","SearchResult","item","category","meta","link","publish_date","update_date","url","subtitle","ResultsList","results","i","main_category_id","Search","submitHandler","changeHandler","clearHandler","filterContainer","React","createRef","s","e","preventDefault","qr","value","componentDidMount","style","height","document","querySelector","offsetHeight","main","posts_by_ids","categories_by_ids","fetchPosts","fetchSearchItemsIds","items","resultItems","postsIds","searchSettings","offset","amount","loadMoreProps","fetchIdsHandler","fetchPostsHandler","isSearch","searchLoadMoreRender","length","container","mapStateToProps","mapDispatchToProps","updateSearch","dispatch","ids"],"mappings":"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","file":"20.js","sourcesContent":["import React, { Component } from 'react';\n\nimport queryString from 'query-string';\nimport _remove from 'lodash/remove';\n\nimport CheckboxItem from 'components/CheckboxItem';\n\nclass CategoryFilter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.filterHandler = this.filterHandler.bind(this);\n\n        this.state = {\n            query: queryString.parse(location.search)\n        }\n    }\n\n    filterHandler(event) {\n        const { history } = this.props;\n\n        const query = queryString.parse(location.search);\n        const checked = event.target.checked;\n\n        const queryCats = query.cat_name ? query.cat_name.split(',') : [];\n\n        if (event.target.name === 'tv') {\n            query.post_type = checked ? event.target.name : '';\n        } else {\n            if (checked) {\n                queryCats.push(event.target.name)\n            } else {\n                _remove(queryCats, el => el === event.target.name)\n            }\n\n            query.cat_name = queryCats.join(',');\n        }\n\n        if (!query.cat_name)\n            delete query.cat_name;\n\n        if (!query.post_type)\n            delete query.post_type;\n\n        history.push(`?${queryString.stringify(query)}`);\n    }\n\n    render() {\n        const { categories = [] } = this.props;\n\n        const {\n            cat_name = '',\n            post_type = ''\n        } = queryString.parse(location.search);\n\n        const catIDs = Object.keys(categories);\n        const queryCats = cat_name.split(',');\n\n        return (\n            <div className=\"category-filter\">\n                <span className=\"title\">Filter på kategori</span>\n                {catIDs.map(id => {\n                    const checked = queryCats.includes(categories[id].slug);\n\n                    return <CheckboxItem key={id} checked={checked} handler={this.filterHandler} item={categories[id]} />\n                })}\n                <CheckboxItem checked={post_type === 'tv'} handler={this.filterHandler} item={{ title: 'tgn tv', name: 'tv' }}/>\n            </div>\n        )\n    }\n}\n\nexport default CategoryFilter","import React, { Component } from 'react';\nimport DatePicker, { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport nb from 'date-fns/locale/nb'\nimport moment from 'moment';\nimport queryString from 'query-string';\n\nregisterLocale('nb', nb);\nsetDefaultLocale('nb');\n\nclass DateFilter extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n\n        const after = queryString.parse(location.search).after;\n        const before = queryString.parse(location.search).before;\n\n        const startDate = after ? new Date(after) : new Date();\n        const endDate = before ? new Date(before) : new Date();\n\n        this.state = {\n            startDate,\n            endDate,\n            query: queryString.parse(location.search)\n        };\n    }\n\n    handleChangeStart(date) {\n        const { endDate } = this.state;\n\n        if (date > endDate) {\n            this.setState({\n                startDate: date,\n                endDate: date\n            });\n        } else {\n            this.setState({ startDate: date });\n        }\n    }\n\n    handleChangeEnd(date) {\n        const { startDate } = this.state;\n\n        if (date < startDate) {\n            this.setState({\n                startDate: date,\n                endDate: date\n            })\n        } else {\n            this.setState({ endDate: date });\n        }\n    }\n\n    handleFilter() {\n        const {\n            startDate,\n            endDate,\n        } = this.state;\n\n        const { history } = this.props;\n\n        const newQuery = queryString.parse(location.search);\n\n        newQuery.before = moment(endDate).format('YYYY-MM-DD');\n        newQuery.after = moment(startDate).format('YYYY-MM-DD');\n\n        history.push(`?${queryString.stringify(newQuery)}`);\n    }\n\n    handleClear() {\n        const { query } = this.state;\n        const { history } = this.props;\n\n        this.setState({\n            startDate: new Date(),\n            endDate: new Date()\n        });\n\n        const newQuery = query;\n\n        delete newQuery.after;\n        delete newQuery.before;\n        delete newQuery.cat_name;\n        delete newQuery.post_type;\n\n        history.push(`?${queryString.stringify(newQuery)}`);\n    }\n\n    render () {\n        const { startDate, endDate } = this.state;\n\n        return (\n            <div className=\"date-filter\">\n                <span className=\"title\">filtrer etter periode</span>\n                <div className=\"datepicker\">\n                    <DatePicker dateFormat={'dd/MM/yyyy'}\n                                selected={startDate}\n                                startDate={startDate}\n                                endDate={endDate}\n                                selectsStart\n                                onChange={this.handleChangeStart}/>\n                    <DatePicker dateFormat={'dd/MM/yyyy'}\n                                selected={endDate}\n                                startDate={startDate}\n                                endDate={endDate}\n                                selectsEnd\n                                onChange={this.handleChangeEnd}/>\n                </div>\n                <div className=\"buttons-container\">\n                    <button className=\"clear\" onClick={this.handleClear}>fjern alle filtre</button>\n                    <button className=\"submit\" onClick={this.handleFilter}>filter</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DateFilter;","import React from 'react';\n\nimport _get from 'lodash/get';\n\nimport { toHumanShortDate, toISO } from 'services/dateServices';\n\nimport Link from 'components/InternalLink';\n\nconst SearchResult = ({ item, category }) => {\n    const {\n        meta,\n        title,\n        link,\n        publish_date,\n        update_date\n    } = item;\n\n    return (\n        <div className=\"result-item\">\n            {category &&\n                <div className=\"category-line\">\n                    <h4 className=\"category-label\"><Link to={category.url}>{category.title}</Link></h4>\n                    {_get(meta, 'is_paid_content', false) && <span className=\"plus-label\">pluss</span>}\n                </div>\n            }\n            {_get(meta, 'subtitle', false) && <h3 className=\"subtitle\"><Link to={link}>{meta.subtitle}</Link></h3>}\n            <h2 className=\"title\"><Link to={link}>{title}</Link></h2>\n            {publish_date &&\n                <div className=\"dateline\">\n                    <time className=\"published\" dateTime={toISO(publish_date)}>{toHumanShortDate(publish_date)}</time>\n                    {((update_date != publish_date) && update_date) && <time className=\"updated\" dateTime={toISO(update_date)}>Oppdatert: {toHumanShortDate(update_date)}</time>}\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default SearchResult;","import React from 'react';\n\nimport ResultItem from 'components/ResultItem';\n\nconst ResultsList = ({ results, categories }) => (\n    <div className=\"results-list\">\n        {results.map((item, i) => <ResultItem key={i} item={item} category={categories[item.main_category_id]} />)}\n    </div>\n);\n\nexport default ResultsList","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\n\nimport { updateSearch } from 'storage/actions/search';\nimport { fetchPosts } from 'storage/actions/posts';\nimport { fetchSearchItemsIds } from 'storage/actions/main';\n\nimport { formPostsArray } from 'services/postsServices';\n\nimport ResultsList from 'components/ResultsList';\nimport CategoryFilter from 'components/CategoryFilter';\nimport DateFilter from 'components/DateFilter';\nimport LoadMore from 'components/LoadMore';\nimport CrossIcon from 'icons/cross-icon.svg';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.submitHandler = this.submitHandler.bind(this);\n        this.changeHandler = this.changeHandler.bind(this);\n        this.clearHandler = this.clearHandler.bind(this);\n\n        this.filterContainer = React.createRef();\n\n        this.state = {\n            query: queryString.parse(location.search).s\n        }\n    }\n\n    submitHandler(e) {\n        e.preventDefault();\n        const { history } = this.props;\n        const { query } = this.state;\n\n        const qr = queryString.parse(location.search);\n        qr.s = query;\n\n        history.push(`?${queryString.stringify(qr)}`);\n    }\n\n    changeHandler(e) {\n        this.setState({ query: e.target.value })\n    }\n\n    clearHandler() {\n        const { history } = this.props;\n\n        this.setState({ query: '' });\n        history.push(`?s=`);\n    }\n\n    componentDidMount() {\n        this.filterContainer.style.height = document.querySelector('.category-filter').offsetHeight + document.querySelector('.date-filter').offsetHeight + 200 + 'px';\n    }\n\n    render() {\n        const { query } = this.state;\n\n        const {\n            main,\n            posts_by_ids,\n            categories_by_ids,\n            history\n        } = this.props;\n\n        const {\n            fetchPosts,\n            fetchSearchItemsIds\n        } = this.props;\n\n        const { items = [] } = main;\n\n        const resultItems = formPostsArray(posts_by_ids, items);\n        const postsIds = Object.keys(posts_by_ids);\n\n        const {\n            after,\n            before,\n            cat_name\n        } = queryString.parse(location.search);\n\n        const searchSettings = {\n            offset: 8,\n            amount: 8,\n        };\n\n        const loadMoreProps = {\n            fetchIdsHandler: fetchSearchItemsIds,\n            fetchPostsHandler: fetchPosts,\n            isSearch: true,\n            ...searchSettings,\n            category: cat_name,\n            after,\n            before,\n            postsIds\n        };\n\n        const searchLoadMoreRender = !(resultItems.length % searchSettings.amount) && <LoadMore {...loadMoreProps}/>;\n\n        return (\n            <section className=\"results-page\">\n                <div className=\"wrapper\">\n                    <div className=\"grid-container\">\n                        <div className=\"grid-4-6\">\n                            <div className=\"search-title\">\n                                <label htmlFor=\"results-search\">Søkeresultater for:</label>\n                                <form onSubmit={this.submitHandler}>\n                                    <input type=\"search\"\n                                           id=\"results-search\"\n                                           value={query}\n                                           onChange={this.changeHandler}/>\n                                </form>\n                                <span className=\"clear\"\n                                      onClick={this.clearHandler}>\n                                    <CrossIcon/>\n                                </span>\n                            </div>\n                            <ResultsList results={resultItems}\n                                         categories={categories_by_ids}/>\n                            {searchLoadMoreRender}\n                        </div>\n                        <div className=\"grid-2-6\" ref={container => this.filterContainer = container}>\n                            <CategoryFilter categories={categories_by_ids}\n                                            history={history}/>\n                            <DateFilter history={history}/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = ({\n    main,\n    posts_by_ids,\n    categories_by_ids\n}) => ({\n    main,\n    posts_by_ids,\n    categories_by_ids\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateSearch: search => dispatch(updateSearch(search)),\n    fetchPosts: ids => dispatch(fetchPosts(ids)),\n    fetchSearchItemsIds: (offset, amount) => dispatch(fetchSearchItemsIds(offset, amount))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search));"],"sourceRoot":""}