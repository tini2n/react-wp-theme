{"version":3,"sources":["webpack:///./assets/src/js/app/components/Ads.js","webpack:///./assets/src/js/app/components/Note.js","webpack:///./assets/src/js/app/components/NotesList.js","webpack:///./assets/src/js/app/containers/templates/DailyNotes.js"],"names":["Ad","isVisible","ad","size","isMobile","handleClick","window","dataLayer","imgSize","attrs","class","push","event","Ad_banner","id","url","image","Ads","props","bind","render","desk","Array","isArray","mob","Component","Note","lead","React","createRef","note","componentDidMount","isArchive","clientHeight","classList","add","post","categories","title","excerpt","main_category_id","category","remove","NotesList","list","notes","loadMoreProps","map","i","DailyNotes","notesList","scrollHandler","listDom","scrollTop","scrollHeight","posts_by_ids","categories_by_ids","main","fetchPostsIdsByCat","fetchPosts","ads","posts","postsIds","Object","keys","fetchIdsHandler","fetchPostsHandler","offset","amount","isCategory","postsType","slug","config","widgets","superlocal","mapStateToProps","mapDispatchToProps","dispatch","ids"],"mappings":"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","file":"5.js","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport TrackVisibility from 'react-on-screen';\nimport { isMobile } from 'react-device-detect';\n\nimport UniversalLink from 'components/UniversalLink';\nimport Thumbnail from 'components/Thumbnail';\n\nconst Ad = ({ isVisible, ad, size, isMobile, handleClick }) => {\n    const { dataLayer } = window;\n    const imgSize = size === 'wide' ? `wide-ad${isMobile ? '-mob' : ''}` : 'tall-ad';\n\n    const attrs = {\n        class: isMobile ? 'ad-mobile' : 'ad-desktop',\n        imgSize\n    };\n\n    if (isVisible) {\n        dataLayer.push({\n            event: 'AdBannerView',\n            Ad_banner: `site_banner_${ad.id}`\n        })\n    }\n\n    return (\n        <Fragment>\n            <div className={attrs.class} onClick={() => handleClick(ad.id)}>\n                <UniversalLink to={ad.url} target=\"_blank\">\n                    <Thumbnail size={attrs.imgSize} thumbnails={ad.image}/>\n                </UniversalLink>\n            </div>\n        </Fragment>\n    )\n};\n\nclass Ads extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(id) {\n        const { dataLayer } = window;\n\n        dataLayer.push({\n            event: 'AdBannerClick',\n            Ad_banner: `site_banner_${id}`\n        })\n    }\n\n    render() {\n        const {\n            ad = {},\n            size,\n        } = this.props;\n\n        return (\n            <section className=\"ads-container\">\n                {ad.desk && !Array.isArray(ad.desk) && !isMobile &&\n                    <TrackVisibility once>\n                        <Ad ad={ad.desk} size={size} isMobile={false} handleClick={this.handleClick}/>\n                    </TrackVisibility>\n                }\n                {ad.desk && !Array.isArray(ad.desk) && isMobile &&\n                    <TrackVisibility once>\n                        <Ad ad={ad.mob} size={size} isMobile={true} handleClick={this.handleClick}/>\n                    </TrackVisibility>\n                }\n            </section>\n        )\n    }\n}\n\nexport default Ads;","import React, { Component } from 'react';\n\nclass Note extends Component {\n    constructor(props) {\n        super(props);\n\n        this.lead = React.createRef();\n        this.note = React.createRef();\n    }\n\n    componentDidMount() {\n        const { isArchive } = this.props;\n\n        if (this.lead.clientHeight > 100 && !isArchive) {\n            this.note.classList.add('is-read-more');\n        }\n    }\n\n    render() {\n        const {\n            post,\n            categories,\n            isArchive\n        } = this.props;\n\n        const {\n            title,\n            excerpt,\n            main_category_id\n        } = post;\n\n        const category = main_category_id && categories[main_category_id].title;\n\n        return (\n            <article className={`note-item`} ref={note => this.note = note}>\n                <div className=\"text-container\">\n                    {category && <h5 className=\"category-label\">{category}</h5>}\n                    {title && <h3 className=\"title\">{title}</h3>}\n                    {excerpt && <p className=\"lead\" ref={lead => this.lead = lead}>{excerpt}</p>}\n                </div>\n                {!isArchive && <span className=\"read-more\" onClick={() => this.note.classList.remove('is-read-more')}>les mer</span>}\n            </article>\n        )\n    }\n}\n\nexport default Note;","import React, { Component } from 'react';\n\nimport Note from 'components/Note';\nimport LoadMore from 'components/LoadMore';\n\nclass NotesList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.list = React.createRef();\n    }\n\n    render() {\n        const {\n            notes,\n            categories,\n            isArchive,\n            loadMoreProps\n        } = this.props;\n\n        return (\n            <div className=\"notes-list\">\n                <h2 className=\"section-title\">Smånytt</h2>\n                <div className=\"list\" ref={list => this.list = list}>\n                    {notes.map((note, i) => <Note key={i} post={note} categories={categories} isArchive={isArchive}/>)}\n                </div>\n                {isArchive && <LoadMore {...loadMoreProps}/>}\n            </div>\n        )\n    }\n}\n\nexport default NotesList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport config from 'utils/config';\n\nimport { fetchPostsIdsByCat } from 'storage/actions/main';\nimport { fetchPosts } from 'storage/actions/posts';\n\nimport { formPostsArray } from 'services/postsServices';\n\nimport Ads from 'components/Ads';\nimport NotesList from 'components/NotesList';\n\nclass DailyNotes extends Component {\n    constructor(props) {\n        super(props);\n\n        this.notesList = React.createRef();\n\n        this.scrollHandler = this.scrollHandler.bind(this);\n    }\n\n    scrollHandler() {\n        const listDom = this.notesList.list;\n\n        listDom.scrollTop = listDom.scrollHeight;\n    }\n\n    render() {\n        const {\n            posts_by_ids,\n            categories_by_ids,\n            main\n        } = this.props;\n\n        const {\n            fetchPostsIdsByCat,\n            fetchPosts\n        } = this.props;\n\n        const {\n            notes = [],\n            ads = []\n        } = main;\n\n        const posts = posts_by_ids;\n        const postsIds = Object.keys(posts);\n        const categories = categories_by_ids;\n\n        const loadMoreProps = {\n            fetchIdsHandler: fetchPostsIdsByCat,\n            fetchPostsHandler: fetchPosts,\n            scrollHandler: this.scrollHandler,\n            offset: 9,\n            amount: 9,\n            isCategory: true,\n            postsType: 'note',\n            slug: '',\n            postsIds\n        };\n\n        return (\n            <section className=\"daily-notes\">\n                <div className=\"wrapper\">\n                    <Ads ad={ads[0]}/>\n                    <div className=\"grid-container\">\n                        <div className=\"grid-3-6 notes\">\n                            <NotesList notes={formPostsArray(posts, notes)}\n                                       ref={list => this.notesList = list}\n                                       categories={categories}\n                                       loadMoreProps={loadMoreProps}\n                                       isArchive={true}/>\n                        </div>\n                        <div className=\"grid-3-6 widget\">\n                            <h2 className=\"section-title\">Travsporten i sosiale medier</h2>\n                            <iframe frameBorder=\"0\" src={config.widgets.superlocal}></iframe>\n                        </div>\n                    </div>\n                    <Ads ad={ads[1]}/>\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = ({ posts_by_ids, categories_by_ids, main }) => ({\n    posts_by_ids,\n    categories_by_ids,\n    main\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchPostsIdsByCat: (postsType, slug, amount, offset) => dispatch(fetchPostsIdsByCat(postsType, slug, amount, offset)),\n    fetchPosts: (ids) => dispatch(fetchPosts(ids))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyNotes);"],"sourceRoot":""}